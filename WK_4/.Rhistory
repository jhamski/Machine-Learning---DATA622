rand.list.1
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 12
m = 16
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], rand.list.1[1:(length(rand.list.1)-2)], rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 11
m = 5
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], rand.list.1[1:(length(rand.list.1)-2)], rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 11
m = 7
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], rand.list.1[1:(length(rand.list.1)-2)], rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 191
m = 9
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], rand.list.1[1:(length(rand.list.1)-2)], rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 191
m = 13
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], rand.list.1[1:(length(rand.list.1)-2)], rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 1912
m = 123
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], rand.list.1[1:(length(rand.list.1)-2)], rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 11
m =
# start out generating a list of four numbers
cnt = 0
while(cnt < 4){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:3] == rand.list.1[(cnt-2):cnt], rand.list.1, rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 11
m =
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], rand.list.1, rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 11
m = 16
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], rand.list.1, rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 11
m = 16
# start out generating a list of four numbers
cnt = 0
while(cnt < 3){
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt = cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt-1):cnt], break, rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.1(3)
LCG.1(3, 11, 16)
LCG.1(1, 11, 16)
LCG.2 <- function(seed, c, m){
X.i <- (seed + a) %% m
return(X.i)
}
seed = 1
c = 12
m = 13
rand.list.2 <- replicate(100, LCG.2(seed, c, m))
?seq
rand.list.2
LCG.2 <- function(seed, c, m){
X.i <- (seed + a) %% m
return(X.i)
}
seed = 1
c = 12
m = 13
gen.size = 102
rand.list.2 = NULL
cnt = 0
while (cnt < gen.size) {
rand.list.2 <- c(rand.list.2, LCG.2(seed, c, m))
cnt = cnt + 1
}
rand.list.2
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 11
m = 16
cnt = 0
while (cnt < 3) {
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt <- cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt - 1):cnt], break, rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
LCG.2 <- function(seed, c, m){
X.i <- (seed + a) %% m
return(X.i)
}
seed = 1
c = 12
m = 13
gen.size = 102
rand.list.2 = NULL
cnt = 0
while (cnt < gen.size) {
new.seed <- LCG.2(seed, c, m)
rand.list.2 <- c(rand.list.2, new.seed)
cnt <- cnt + 1
seed <- new.seed
}
rand.list.2
LCG.2 <- function(seed, c, m){
X.i <- (seed + a) %% m
return(X.i)
}
seed = 1
c = 12
m = 13
gen.size = 52
rand.list.2 = NULL
cnt = 0
while (cnt < gen.size) {
new.seed <- LCG.2(seed, c, m)
rand.list.2 <- c(rand.list.2, new.seed)
cnt <- cnt + 1
seed <- new.seed
}
rand.list.2
x <- rand.list.2[1:gen.size-1]
x
x <- rand.list.2[1:gen.size-1]
y <- rand.list.2[2:]
x <- rand.list.2[1:gen.size-1]
y <- rand.list.2[2:gen.size]
x <- rand.list.2[1:gen.size-1]
y <- rand.list.2[2:gen.size]
plot(x, y)
rand.list.1
rand.list.2
LCG.2 <- function(seed, c, m){
X.i <- (seed + a) %% m
return(X.i)
}
seed = 1
c = 12
m = 13
gen.size = 21
rand.list.2 = NULL
cnt = 0
while (cnt < gen.size) {
new.seed <- LCG.2(seed, c, m)
rand.list.2 <- c(rand.list.2, new.seed)
cnt <- cnt + 1
seed <- new.seed
}
x <- rand.list.2[1:gen.size-1]
y <- rand.list.2[2:gen.size]
plot(x, y)
rand.list.2
?reduce
?Reduce
mod.function <- function(X.i1, a, c, m){return((a*X.i1 + c) %% m)}
mod.function(11, 1, 3,66)
mod.function(14, 1, 3,66)
mod.function <- function(X.i1, a, c, m){return((a*X.i1 + c) %% m)}
a = 16807
c = 0
m = (2 ** 31) -1
X.0 = 1234567
obs = 100000
rand.list.3 = X.0
rand.list.3[1]
mod.function <- function(X.i1, a, c, m){return((a*X.i1 + c) %% m)}
a = 16807
c = 0
m = (2 ** 31) -1
X.0 = 1234567
obs = 100000
rand.list.3 = X.0
for (i in 1:obs){
rand.list.3[i+1] <- mod.function(rand.list.3[i], a, c, m)
}
rand.list.3
rand.list.3 <- rand.list.3 / m
mod.function <- function(X.i1, a, c, m){return((a*X.i1 + c) %% m)}
a = 1
c = 12
m = 13
X.0 = 1
obs = 50
rand.list.2 = X.0
for (i in 1:obs){
rand.list.2[i+1] <- mod.function(rand.list.2[i], a, c, m)
}
rand.list.2
x <- rand.list.2[1:gen.size-1]
y <- rand.list.2[2:gen.size]
plot(x, y)
LCG.1 <- function(seed, a, m){
X.i <- (seed * a) %% m
return(X.i)
}
rand.list.1 = 1
a = 11
m = 16
cnt = 0
while (cnt < 3) {
rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m))
cnt <- cnt + 1
}
ifelse(rand.list.1[1:2] == rand.list.1[(cnt - 1):cnt], break, rand.list.1 <- c(rand.list.1, LCG.1(rand.list.1[cnt], a, m)))
rand.list.1
mod.function <- function(X.i1, a, c, m){return((a*X.i1 + c) %% m)}
a = 1
c = 12
m = 13
X.0 = 1
obs = 50
rand.list.2 = X.0
for (i in 1:obs){
rand.list.2[i+1] <- mod.function(rand.list.2[i], a, c, m)
}
rand.list.2
x <- rand.list.2[1:gen.size-1]
y <- rand.list.2[2:gen.size]
plot(x, y)
mod.function <- function(X.i1, a, c, m){return((a*X.i1 + c) %% m)}
a = 1
c = 12
m = 13
X.0 = 1
obs = 50
rand.list.2 = X.0
for (i in 1:obs){
rand.list.2[i+1] <- mod.function(rand.list.2[i], a, c, m)
}
rand.list.2
x <- rand.list.2[1:gen.size-1]
y <- rand.list.2[2:gen.size]
plot(x, y)
mod.function <- function(X.i1, a, c, m){return((a*X.i1 + c) %% m)}
a = 1
c = 12
m = 13
X.0 = 1
gen.size = 50
rand.list.2 = X.0
for (i in 1:gen.size){
rand.list.2[i+1] <- mod.function(rand.list.2[i], a, c, m)
}
rand.list.2
x <- rand.list.2[1:gen.size-1]
y <- rand.list.2[2:gen.size]
plot(x, y)
a = 16807
c = 0
m = (2 ** 31) - 1
X.0 = 1234567
obs = 100
rand.list.3 = X.0
for (i in 1:obs){
rand.list.3[i+1] <- mod.function(rand.list.3[i], a, c, m)
}
rand.list.3 <- rand.list.3 / m
length(rand.list.3)
a = 16807
c = 0
m = (2 ** 31) - 1
X.0 = 1234567
obs = 100000
rand.list.3 = X.0
for (i in 1:(obs-1)){
rand.list.3[i+1] <- mod.function(rand.list.3[i], a, c, m)
}
rand.list.3 <- rand.list.3 / m
chisq.test(x = rand.list.3)
?chisq.test
setwd("~/Documents/Graduate School/622 - Big Data and Machine Learning/homework/WK_4")
m
maeX <- read_csv("maeX.csv")
library(readr)
maeX <- read_csv("maeX.csv")
length(maeX)
maeX <- read_csv("maeX.csv")
maeY <- read_csv("maeY.csv")
maeZ <- read_csv("maeZ.csv")
maeX
maeY
str(maeY)
mae_T <- cbind(maeX, t(maeY), t(maeZ))
str(maeY)
str(t(maeY))
str(t(maeY[1]))
str(t(maeY[0]))
str(t(maeY[2]))
str(t(maeY[1]))
as.array(maeZ)
as.array(maeZ[1])
as.array(maeZ[2])
as.array(maeX)
unlist(maeZ)
maeX <- read_csv("maeX.csv") %>% unlist()
maeY <- read_csv("maeY.csv") %>% unlist()
maeZ <- read_csv("maeZ.csv") %>% unlist()
library(readr)
library(magrittr)
maeX <- read_csv("maeX.csv") %>% unlist()
maeY <- read_csv("maeY.csv") %>% unlist()
maeZ <- read_csv("maeZ.csv") %>% unlist()
mae_T <- cbind(maeX, maeY, maeZ)
str(mae_T)
mae_T <- cbind(maeX, maeY, maeZ) %>% as.data.frame()
str(mae_T)
maeX
mae_T <- cbind(maeX, maeY, maeZ) %>% as.data.frame()
str(mae_T)
mae_T
maeX <- read_csv("maeX.csv") #%>% unlist()
maeX
maeX <- read_csv("maeX.csv") #%>% unlist()
maeY <- read_csv("maeY.csv") #%>% unlist()
maeZ <- read_csv("maeZ.csv") #%>% unlist()
maeX
str(maeX)
str(maeX)
maeX <- read_csv("maeX.csv") %>% unlist() %>% t()#%>% unlist()
str(maeX)
maeX <- read_csv("maeX.csv") %>% t() #%>% unlist()
str(maeX)
str(maeX[1])
str(maeX[,1])
names(maeX)
rownames(maeX)
maeX <- rownames(maeX)
str(maeX)
mae_T <- cbind(maeX, maeY, maeZ) %>% as.data.frame()
maeX <- maeX[1:1680]
mae_T <- cbind(maeX, maeY, maeZ) %>% as.data.frame()
str(mae_T)
write_csv("mae_T.csv")
setwd("~/Documents/Graduate School/622 - Big Data and Machine Learning/homework/WK_4")
write_csv("mae_T_2.csv")
write_csv(mae_T, "mae_T_2.csv")
library(readr)
library(magrittr)
maeX <- read_csv("maeX.csv") %>% t() #%>% unlist()
maeY <- read_csv("maeY.csv") #%>% unlist()
maeZ <- read_csv("maeZ.csv") #%>% unlist()
maeY <- c("maeY", maeY)
maeZ <- c("maeZ", maeZ)
maeX <- rownames(maeX)
mae_T <- cbind(maeX, maeY, maeZ) %>% as.data.frame()
write_csv(mae_T, "mae_T_2.csv")
library(readr)
library(magrittr)
maeX <- read_csv("maeX.csv") %>% t() #%>% unlist()
maeY <- read_csv("maeY.csv") #%>% unlist()
maeZ <- read_csv("maeZ.csv") #%>% unlist()
maeX <- rownames(maeX)
str(maeX)
maeX <- rownames(maeX) %>% as.array()
str(maeY)
maeX <- rownames(maeX) %>% as.data.frame()
str(maeX)
maeX
library(readr)
library(magrittr)
maeX <- read_csv("maeX.csv") %>% t() #%>% unlist()
maeY <- read_csv("maeY.csv") #%>% unlist()
maeZ <- read_csv("maeZ.csv") #%>% unlist()
maeX <- rownames(maeX)
str(maeX)
unlist(maeX)
maeX <- read_csv("maeX.csv") %>% t() #%>% unlist()
maeY <- read_csv("maeY.csv") #%>% unlist()
maeZ <- read_csv("maeZ.csv") #%>% unlist()
maeX <- rownames(maeX) %>% ulist()
maeX <- read_csv("maeX.csv") %>% t() #%>% unlist()
maeY <- read_csv("maeY.csv") #%>% unlist()
maeZ <- read_csv("maeZ.csv") #%>% unlist()
maeX <- rownames(maeX) %>% unlist()
maeX
mae_T <- cbind(maeX, maeY, maeZ) %>% as.data.frame()
str(maeX)
str(maeY)
maeX[1681]
?rownames
maeX <- read_csv("maeX.csv") %>% t() #%>% unlist()
str(maeX)
str(unlist(maeX))
str(unlist(maeX[1]))
str(unlist(maeX[,1]))
str(unlist(maeX[1,]))
maeX <- rownames(maeX)
str(maeX)
list(maeX)
maeXa <- read_csv("maeX.csv") %>% t() #%>% unlist()
maeY <- read_csv("maeY.csv") #%>% unlist()
maeZ <- read_csv("maeZ.csv") #%>% unlist()
maeX <- rownames(maeXa) %>% list
str(maeX)
array(maeX)
maeX <- rownames(maeXa) %>% list %>% array()
str(maeX)
str(maeX[1])
mae_T <- cbind(maeX[1], maeY, maeZ) %>% as.data.frame()
library(dplyr)
mae_T <- cbind(maeX[1], maeY, maeZ) %>% as.data.frame()
mae_T <- cbind(maeX[1:1680], maeY, maeZ) %>% as.data.frame()
View(mae_T)
maeX <- rownames(maeXa) %>% array()
mae_T <- cbind(maeX[1:1680], maeY, maeZ) %>% as.data.frame()
write_csv(mae_T, "mae_T_2.csv" )
View(mae_T)
?as.data.frame
